{"version":3,"file":"vapi-browser-client.js","mappings":"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","sources":["webpack://VapiBrowserClient/webpack/universalModuleDefinition","webpack://VapiBrowserClient/./src/browser/vapi-browser-client.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VapiBrowserClient\"] = factory();\n\telse\n\t\troot[\"VapiBrowserClient\"] = factory();\n})(this, () => {\nreturn ","/**\n * TypeScript Vapi Browser Client\n * Properly typed implementation for browser-based Vapi voice operations\n */\n\n// Type definitions for Vapi SDK\ninterface VapiSDK {\n  run(config: VapiConfig): VapiInstance;\n}\n\ninterface VapiConfig {\n  apiKey: string;\n  assistant: string;\n  config?: {\n    hideButton?: boolean;\n    [key: string]: any;\n  };\n}\n\ninterface VapiInstance {\n  on(event: string, callback: (data: any) => void): void;\n  start?(): void;\n  stop?(): void;\n  send?(message: any): void;\n}\n\ninterface TranscriptMessage {\n  type: 'transcript';\n  role: 'user' | 'assistant';\n  transcript: string;\n  timestamp?: string;\n}\n\ninterface FunctionCallEvent {\n  functionCall: {\n    name: string;\n    parameters: Record<string, any>;\n  };\n}\n\n\n// Declare global window interface for Vapi SDK\ndeclare global {\n  interface Window {\n    vapiSDK: VapiSDK;\n    VapiBrowserClient: typeof VapiBrowserClient;\n  }\n}\n\n/**\n * Main Vapi Browser Client Class\n */\nexport class VapiBrowserClient {\n  private vapiInstance: VapiInstance | null = null;\n  private publicKey: string;\n  private assistantId: string;\n  private isCallActive: boolean = false;\n  private initRetries: number = 0;\n  private maxRetries: number = 10;\n  \n  // Event callbacks\n  private callbacks: {\n    onReady?: () => void;\n    onCallStart?: () => void;\n    onCallEnd?: () => void;\n    onTranscript?: (message: TranscriptMessage) => void;\n    onFunctionCall?: (event: FunctionCallEvent) => void;\n    onError?: (error: any) => void;\n  } = {};\n\n  constructor(publicKey: string, assistantId: string) {\n    this.publicKey = publicKey;\n    this.assistantId = assistantId;\n  }\n\n  /**\n   * Initialize the Vapi SDK\n   */\n  public async initialize(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const attemptInit = () => {\n        if (!window.vapiSDK) {\n          this.initRetries++;\n          if (this.initRetries >= this.maxRetries) {\n            reject(new Error('Vapi SDK failed to load after maximum retries'));\n            return;\n          }\n          console.log(`Waiting for Vapi SDK... (attempt ${this.initRetries}/${this.maxRetries})`);\n          setTimeout(attemptInit, 1000);\n          return;\n        }\n\n        try {\n          console.log('Initializing Vapi with assistant...');\n          \n          this.vapiInstance = window.vapiSDK.run({\n            apiKey: this.publicKey,\n            assistant: this.assistantId,\n            config: {\n              hideButton: false  // Show the teal floating button\n            }\n          });\n\n          this.setupEventHandlers();\n          console.log('✅ Vapi initialized successfully!');\n          \n          if (this.callbacks.onReady) {\n            this.callbacks.onReady();\n          }\n          \n          resolve();\n        } catch (error) {\n          console.error('Failed to initialize Vapi:', error);\n          reject(error);\n        }\n      };\n\n      attemptInit();\n    });\n  }\n\n  /**\n   * Set up event handlers for Vapi instance\n   */\n  private setupEventHandlers(): void {\n    if (!this.vapiInstance) return;\n\n    this.vapiInstance.on('call-start', () => {\n      this.isCallActive = true;\n      console.log('📞 Call started');\n      if (this.callbacks.onCallStart) {\n        this.callbacks.onCallStart();\n      }\n    });\n\n    this.vapiInstance.on('call-end', () => {\n      this.isCallActive = false;\n      console.log('📞 Call ended');\n      if (this.callbacks.onCallEnd) {\n        this.callbacks.onCallEnd();\n      }\n    });\n\n    this.vapiInstance.on('message', (msg: any) => {\n      if (msg.type === 'transcript' && msg.transcript) {\n        const transcriptMessage: TranscriptMessage = {\n          type: 'transcript',\n          role: msg.role === 'assistant' ? 'assistant' : 'user',\n          transcript: msg.transcript,\n          timestamp: new Date().toISOString()\n        };\n        \n        console.log(`${transcriptMessage.role}: ${transcriptMessage.transcript}`);\n        \n        if (this.callbacks.onTranscript) {\n          this.callbacks.onTranscript(transcriptMessage);\n        }\n      }\n    });\n\n    this.vapiInstance.on('function-call', (event: FunctionCallEvent) => {\n      console.log('🔧 Function call:', event.functionCall.name);\n      if (this.callbacks.onFunctionCall) {\n        this.callbacks.onFunctionCall(event);\n      }\n    });\n\n    this.vapiInstance.on('error', (error: any) => {\n      console.error('❌ Vapi error:', error);\n      if (this.callbacks.onError) {\n        this.callbacks.onError(error);\n      }\n    });\n  }\n\n  /**\n   * Start a voice call\n   */\n  public startCall(): void {\n    if (!this.vapiInstance) {\n      throw new Error('Vapi not initialized. Call initialize() first.');\n    }\n\n    if (this.vapiInstance.start) {\n      this.vapiInstance.start();\n    } else {\n      console.log('Call start requested - Vapi may handle this automatically');\n    }\n  }\n\n  /**\n   * End the current voice call\n   */\n  public endCall(): void {\n    if (!this.vapiInstance) {\n      throw new Error('Vapi not initialized');\n    }\n\n    if (this.vapiInstance.stop) {\n      this.vapiInstance.stop();\n    } else {\n      console.log('Call stop requested');\n    }\n  }\n\n  /**\n   * Send a message to the assistant\n   */\n  public sendMessage(message: string): void {\n    if (!this.vapiInstance) {\n      throw new Error('Vapi not initialized');\n    }\n\n    if (this.vapiInstance.send) {\n      this.vapiInstance.send({\n        type: 'message',\n        content: message\n      });\n    }\n  }\n\n  /**\n   * Check if a call is currently active\n   */\n  public isActive(): boolean {\n    return this.isCallActive;\n  }\n\n  /**\n   * Register event callbacks\n   */\n  public on(event: 'ready' | 'callStart' | 'callEnd' | 'transcript' | 'functionCall' | 'error', callback: any): void {\n    switch (event) {\n      case 'ready':\n        this.callbacks.onReady = callback;\n        break;\n      case 'callStart':\n        this.callbacks.onCallStart = callback;\n        break;\n      case 'callEnd':\n        this.callbacks.onCallEnd = callback;\n        break;\n      case 'transcript':\n        this.callbacks.onTranscript = callback;\n        break;\n      case 'functionCall':\n        this.callbacks.onFunctionCall = callback;\n        break;\n      case 'error':\n        this.callbacks.onError = callback;\n        break;\n    }\n  }\n\n  /**\n   * Get current configuration\n   */\n  public getConfig(): { publicKey: string; assistantId: string } {\n    return {\n      publicKey: this.publicKey,\n      assistantId: this.assistantId\n    };\n  }\n}\n\n// Export for browser use\nif (typeof window !== 'undefined') {\n  window.VapiBrowserClient = VapiBrowserClient;\n}"],"names":[],"sourceRoot":""}