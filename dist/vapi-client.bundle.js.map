{"version":3,"file":"vapi-client.bundle.js","mappings":"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","sources":["webpack://VapiClient/webpack/universalModuleDefinition","webpack://VapiClient/./src/browser/vapi-client.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VapiClient\"] = factory();\n\telse\n\t\troot[\"VapiClient\"] = factory();\n})(this, () => {\nreturn ","/**\n * TypeScript Vapi Browser Client\n * This is the main client that will be compiled and bundled for browser use\n */\n\n// Type definitions\ninterface VapiSDK {\n  run(config: VapiConfig): VapiInstance;\n}\n\ninterface VapiConfig {\n  apiKey: string;\n  assistant: string;\n  config?: {\n    hideButton?: boolean;\n    [key: string]: any;\n  };\n}\n\ninterface VapiInstance {\n  on(event: string, callback: (data: any) => void): void;\n  start?(): void;\n  stop?(): void;\n  send?(message: any): void;\n}\n\ninterface TranscriptMessage {\n  type: 'transcript';\n  role: 'user' | 'assistant';\n  transcript: string;\n  timestamp?: string;\n}\n\ninterface FunctionCallEvent {\n  functionCall: {\n    name: string;\n    parameters: Record<string, any>;\n  };\n}\n\n// Declare global window interface\ndeclare global {\n  interface Window {\n    vapiSDK: VapiSDK;\n    VapiClient: typeof VapiClient;\n    initializeVapi: () => Promise<void>;\n  }\n}\n\n/**\n * Main Vapi Client Class\n */\nexport class VapiClient {\n  private vapiInstance: VapiInstance | null = null;\n  private publicKey: string = '';\n  private assistantId: string = '';\n  private isCallActive: boolean = false;\n  private initRetries: number = 0;\n  private maxRetries: number = 10;\n  \n  // Event callbacks\n  private callbacks: {\n    onReady?: () => void;\n    onCallStart?: () => void;\n    onCallEnd?: () => void;\n    onTranscript?: (message: TranscriptMessage) => void;\n    onFunctionCall?: (event: FunctionCallEvent) => void;\n    onError?: (error: any) => void;\n  } = {};\n\n  /**\n   * Initialize with configuration from server\n   */\n  public async initializeFromServer(): Promise<void> {\n    try {\n      const response = await fetch('/api/vapi-config');\n      if (!response.ok) {\n        throw new Error(`Failed to fetch config: ${response.status}`);\n      }\n      \n      const config = await response.json();\n      if (!config.publicKey || !config.assistantId) {\n        throw new Error('Invalid configuration from server');\n      }\n      \n      this.publicKey = config.publicKey;\n      this.assistantId = config.assistantId;\n      \n      console.log('✅ Configuration loaded from server');\n      await this.initialize();\n    } catch (error) {\n      console.error('Failed to initialize from server:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Initialize the Vapi SDK\n   */\n  private async initialize(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const attemptInit = () => {\n        if (!window.vapiSDK) {\n          this.initRetries++;\n          if (this.initRetries >= this.maxRetries) {\n            reject(new Error('Vapi SDK failed to load after maximum retries'));\n            return;\n          }\n          console.log(`Waiting for Vapi SDK... (attempt ${this.initRetries}/${this.maxRetries})`);\n          setTimeout(attemptInit, 1000);\n          return;\n        }\n\n        try {\n          console.log('Initializing Vapi with assistant...');\n          \n          this.vapiInstance = window.vapiSDK.run({\n            apiKey: this.publicKey,\n            assistant: this.assistantId,\n            config: {\n              hideButton: false\n            }\n          });\n\n          this.setupEventHandlers();\n          console.log('✅ Vapi initialized successfully!');\n          \n          if (this.callbacks.onReady) {\n            this.callbacks.onReady();\n          }\n          \n          resolve();\n        } catch (error) {\n          console.error('Failed to initialize Vapi:', error);\n          reject(error);\n        }\n      };\n\n      attemptInit();\n    });\n  }\n\n  /**\n   * Set up event handlers for Vapi instance\n   */\n  private setupEventHandlers(): void {\n    if (!this.vapiInstance) return;\n\n    this.vapiInstance.on('call-start', () => {\n      this.isCallActive = true;\n      console.log('📞 Call started');\n      if (this.callbacks.onCallStart) {\n        this.callbacks.onCallStart();\n      }\n    });\n\n    this.vapiInstance.on('call-end', () => {\n      this.isCallActive = false;\n      console.log('📞 Call ended');\n      if (this.callbacks.onCallEnd) {\n        this.callbacks.onCallEnd();\n      }\n    });\n\n    this.vapiInstance.on('message', (msg: any) => {\n      if (msg.type === 'transcript' && msg.transcript) {\n        const transcriptMessage: TranscriptMessage = {\n          type: 'transcript',\n          role: msg.role === 'assistant' ? 'assistant' : 'user',\n          transcript: msg.transcript,\n          timestamp: new Date().toISOString()\n        };\n        \n        console.log(`${transcriptMessage.role}: ${transcriptMessage.transcript}`);\n        \n        if (this.callbacks.onTranscript) {\n          this.callbacks.onTranscript(transcriptMessage);\n        }\n      }\n    });\n\n    this.vapiInstance.on('function-call', (event: FunctionCallEvent) => {\n      console.log('🔧 Function call:', event.functionCall.name);\n      if (this.callbacks.onFunctionCall) {\n        this.callbacks.onFunctionCall(event);\n      }\n    });\n\n    this.vapiInstance.on('error', (error: any) => {\n      console.error('❌ Vapi error:', error);\n      if (this.callbacks.onError) {\n        this.callbacks.onError(error);\n      }\n    });\n  }\n\n  /**\n   * Register event callbacks\n   */\n  public on(event: 'ready' | 'callStart' | 'callEnd' | 'transcript' | 'functionCall' | 'error', callback: any): void {\n    switch (event) {\n      case 'ready':\n        this.callbacks.onReady = callback;\n        break;\n      case 'callStart':\n        this.callbacks.onCallStart = callback;\n        break;\n      case 'callEnd':\n        this.callbacks.onCallEnd = callback;\n        break;\n      case 'transcript':\n        this.callbacks.onTranscript = callback;\n        break;\n      case 'functionCall':\n        this.callbacks.onFunctionCall = callback;\n        break;\n      case 'error':\n        this.callbacks.onError = callback;\n        break;\n    }\n  }\n\n  /**\n   * Check if a call is currently active\n   */\n  public isActive(): boolean {\n    return this.isCallActive;\n  }\n\n  /**\n   * Get current configuration\n   */\n  public getConfig(): { publicKey: string; assistantId: string } {\n    return {\n      publicKey: this.publicKey,\n      assistantId: this.assistantId\n    };\n  }\n}\n\n// UI Helper functions\nexport function addTranscript(role: string, content: string): void {\n  const transcript = document.getElementById('transcript');\n  if (!transcript) return;\n\n  const entry = document.createElement('div');\n  entry.className = `transcript-entry ${role}`;\n  \n  const timestamp = document.createElement('span');\n  timestamp.className = 'timestamp';\n  timestamp.textContent = new Date().toLocaleTimeString();\n  \n  const roleLabel = document.createElement('span');\n  roleLabel.className = 'role';\n  roleLabel.textContent = role.toUpperCase() + ':';\n  \n  const contentSpan = document.createElement('span');\n  contentSpan.textContent = content;\n  \n  entry.appendChild(timestamp);\n  entry.appendChild(roleLabel);\n  entry.appendChild(contentSpan);\n  \n  transcript.appendChild(entry);\n  transcript.scrollTop = transcript.scrollHeight;\n}\n\nexport function updateStatus(className: string, text: string): void {\n  const statusEl = document.getElementById('status');\n  const statusTextEl = document.getElementById('statusText');\n  \n  if (statusEl) {\n    statusEl.className = `status ${className}`;\n  }\n  \n  if (statusTextEl) {\n    statusTextEl.textContent = text;\n  }\n}\n\n// Auto-initialize function\nwindow.initializeVapi = async function(): Promise<void> {\n  try {\n    updateStatus('loading', 'Initializing...');\n    addTranscript('system', 'Starting TypeScript Vapi client initialization...');\n    \n    const client = new VapiClient();\n    \n    // Set up event handlers\n    client.on('ready', () => {\n      addTranscript('system', '✅ Vapi ready! Click the teal phone button to start.');\n      updateStatus('ready', 'Ready - Click teal button to call');\n    });\n    \n    client.on('callStart', () => {\n      addTranscript('system', '📞 Voice call started');\n      updateStatus('active', 'In call');\n    });\n    \n    client.on('callEnd', () => {\n      addTranscript('system', '📞 Voice call ended');\n      updateStatus('ready', 'Ready - Click teal button to call');\n    });\n    \n    client.on('transcript', (message: TranscriptMessage) => {\n      addTranscript(message.role, message.transcript);\n    });\n    \n    client.on('error', (error: any) => {\n      addTranscript('system', `❌ Error: ${error.message || JSON.stringify(error)}`);\n      updateStatus('error', 'Error occurred');\n    });\n    \n    // Initialize from server\n    await client.initializeFromServer();\n    \n    // Make client available globally\n    window.VapiClient = VapiClient;\n    \n  } catch (error: any) {\n    console.error('Failed to initialize:', error);\n    addTranscript('system', `❌ Failed to initialize: ${error.message}`);\n    updateStatus('error', 'Initialization failed');\n  }\n};\n\n// Export for use\nexport default VapiClient;"],"names":[],"sourceRoot":""}